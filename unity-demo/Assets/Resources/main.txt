import "UnityEngine"

function start()
	
end

function test()
	
end

function main()
	start()
end

function foo3(a,b,c)
	return a,b,c,"slua"
end

function foo2(a,b,c)
	foo3(a,b,c)
	return a,b,c,"slua"
end

function foo1(a,b,c)
  foo2(a,b,c)
	return a,b,c,"slua"
end

function Split(szFullString, szSeparator)  
local nFindStartIndex = 1  
local nSplitIndex = 1  
local nSplitArray = {}  
while true do  
   local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)  
   if not nFindLastIndex then  
    nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))  
    break  
   end  
   nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)  
   nFindStartIndex = nFindLastIndex + string.len(szSeparator)  
   nSplitIndex = nSplitIndex + 1  
end  
return nSplitArray  
end  

function foo6(a,b,c)
	profiler_snapshot()
end

function foo(a,b,c)
	--local S1 = profiler_snapshot()
	--[[
	for k,v in pairs(S1) do
			print('--{ ' .. v .. ' }--')
	end
	]]--
	local t0 = {}
	local t1 = {"hello","world",['three'] = t0}
	local t2 = {"hello","lua"}
	local s = "hello world"
	local tmp = {['one'] = t1,t2,['two'] = 'hi'}
	local function call()
		print()
	end
	--print(t)
	--print(t2)
	--print(tmp)
	--print('-----------------------')
	local S2 = profiler_snapshot()
	
	local filename = "d:\\" .. os.time() .. "_snapshot.log"
	local file = io.open(filename, 'w')
	for k,v in pairs(S2) do
		--if S1[k] == nil then
			--print(k,v)
			local key = string.gsub(tostring(k), 'userdata: ', '')
			--local value = tostring(v)
			--local array = Split(tostring(v),'\n')
			local output = '--------{[key]=' .. tostring(key) .. '\n' .. tostring(v) .. '}\n'
			file:write(output) 
		
		--else
			--output = '{[key]=' .. tostring(k) .. '\n' .. tostring(v) .. '}\n'
			--file:write(output)
			 
		--end
		
	end
	file:close()
	
	return a,b,c,"slua"
end

function stop()
end